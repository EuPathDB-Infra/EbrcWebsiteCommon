<project name="EbrcWebsiteCommon" basedir=".">

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Dependencies  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <import file="${projectsDir}/WDK/build.xml" />

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Installation  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="EbrcWebsiteCommon-Installation" depends="WDK-Installation,
                                                         EbrcWebsiteCommon/Site-Installation,
                                                         EbrcWebsiteCommon/Model-Installation,
                                                         EbrcWebsiteCommon/View-Installation,
                                                         EbrcWebsiteCommon/Watar-Installation">
    <ant target="defaultProjectInstall">
      <property name="project" value="EbrcWebsiteCommon" />
    </ant>
  </target>

  <!-- ooooooooooooooooooooooo  Install Components  ooooooooooooooooooooooo -->

  <target name="EbrcWebsiteCommon/Model-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="EbrcWebsiteCommon" />
      <property name="component" value="Model" />
    </ant>
  </target>

  <target name="EbrcWebsiteCommon/Site-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="EbrcWebsiteCommon" />
      <property name="component" value="Site" />
    </ant>
  </target>

  <target name="EbrcWebsiteCommon/View-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="EbrcWebsiteCommon" />
      <property name="component" value="View" />
    </ant>
  </target>

  <target name="EbrcWebsiteCommon/Watar-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="EbrcWebsiteCommon" />
      <property name="component" value="Watar" />
    </ant>
  </target>

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooo  Web Installation  oooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="EbrcWebsiteCommon-WebInstallation" depends="WDK-WebInstallation,
                                                            EbrcWebsiteCommon-Installation,
                                                            EbrcWebsiteCommon/Site-WebInstallation"/>

  <target name="EbrcWebsiteCommon/Site-WebInstallation">

    <ant target="defaultWebComponentInstall">
      <property name="project" value="EbrcWebsiteCommon" />
      <property name="component" value="Site" />
    </ant>

    <ant target="webComponentPartCopy">
      <property name="componentDir"
                value="${projectsDir}/EbrcWebsiteCommon/Site" />
      <property name="part" value="dashboard" />
      <property name="to" value="${htdocsTargetDir}/../dashboard" />
    </ant>

    <available file="${htdocsTargetDir}/../dashboard" type="dir"
               property="dashboard.present" />
    <antcall target="dashboardDoc" />

    <replace file="${cgibinTargetDir}/dataPlotter.pl"
             token="@rProgram@"
             value="${rProgram}" />

  </target>

  <!-- Target to be used by implementing sites -->
  <target name="eupathWebComponentInstall">
    <ant target="defaultWebComponentInstall"/>
    <antcall target="installLocalWebAssets"/>
    <antcall target="installPublishedWebAssets"/>
  </target>

  <target name="shouldInstallLocalWebAssets">
    <condition property="installLocalWebAssets.run" value="true" else="false">
      <and>
        <available file="${webAssets.localAssetsPath}/package.json"/>
        <istrue value="${webAssets.useLocalAssets}"/>
      </and>
    </condition>
  </target>

  <target name="installLocalWebAssets" depends="shouldInstallLocalWebAssets" if="${installLocalWebAssets.run}">
    <condition property="browserslistEnv" value="legacy" else="modern">
      <istrue value="${webAssets.legacy}"/>
    </condition>

    <condition property="webpack.env" value="--mode=production" else="--mode=development">
      <istrue value="${webAssets.optimize}"/>
    </condition>

    <echo message="Installing local web asset yarn deps"/>
    <exec
      executable="yarn"
      dir="${webAssets.localAssetsPath}"
      failonerror="true"
      failifexecutionfails="true"
    />

    <echo message="Bundling local web assets"/>
    <exec
      executable="yarn"
      dir="${webAssets.localAssetsPath}"
      failonerror="true"
      failifexecutionfails="true"
    >
      <env key="BROWSERSLIST_ENV" value="${browserslistEnv}"/>
      <arg line="nx run ${workspaceName}:bundle ${webpack.env}"/>
    </exec>

    <copy todir="${webappTargetDir}">
      <fileset dir="${webAssets.localAssetsPath}/${workspacePath}/webapp" />
    </copy>

    <delete dir="${webappTargetDir}/bundles"/>

    <copy todir="${webappTargetDir}/bundles">
      <fileset dir="${webAssets.localAssetsPath}/${workspacePath}/dist" />
    </copy>
  </target>

  <target name="installPublishedWebAssets" depends="shouldInstallLocalWebAssets" unless="${installLocalWebAssets.run}">
    <condition property="publishedAssetsTag" value="${webAssets.publishedAssetsTag}" else="latest">
      <isset property="webAssets.publishedAssetsTag"/>
    </condition>

    <echo message="Downloading published web assets"/>
    <mkdir dir="${webappTargetDir}/publishedWebAssets"/>
    <exec
      executable="npm"
      dir="${webappTargetDir}/publishedWebAssets"
      failonerror="true"
      failifexecutionfails="true"
    >
      <arg line="pack ${workspaceName}@${publishedAssetsTag}"/>
    </exec>

    <echo message="Extracting published web assets"/>
    <move todir="${webappTargetDir}/publishedWebAssets">
      <fileset dir="${webappTargetDir}/publishedWebAssets" includes="*.tgz"/>
      <mapper type="glob" from="*" to="package.tgz"/>
    </move>
    <exec
      executable="tar"
      dir="${webappTargetDir}/publishedWebAssets"
      failonerror="true"
      failifexecutionfails="true"
    >
      <arg line="-xf package.tgz"/>
    </exec>

    <echo message="Copying extracted assets to webapp"/>
    <copy todir="${webappTargetDir}">
      <fileset dir="${webappTargetDir}/publishedWebAssets/package/webapp" />
    </copy>

    <delete dir="${webappTargetDir}/bundles"/>

    <copy todir="${webappTargetDir}/bundles">
      <fileset dir="${webappTargetDir}/publishedWebAssets/package/dist" />
    </copy>

    <delete dir="${webappTargetDir}/publishedWebAssets"/>
  </target>

  <target name="buildLocalNpmPackages">
    <echo message="Building npm package for WDKClient/Client"/>
    <exec executable="yarn" dir="${projectsDir}/WDKClient/Client" failonerror="true">
      <arg line="--ignore-engines"/>
    </exec>
    <exec executable="yarn" dir="${projectsDir}/WDKClient/Client" failonerror="true">
      <arg line="build"/>
    </exec>
    <exec executable="yarn" dir="${projectsDir}/EbrcWebsiteCommon/Client" failonerror="true">
      <arg line="--ignore-engines"/>
    </exec>
  </target>

  <target name="copyClientImages" if="isYarnComponent" depends="checkIfYarnComponent">
    <copy todir="${webappTargetDir}/images">
      <fileset dir="${yarnCwd}/node_modules/@veupathdb/web-common/images"/>
    </copy>
  </target>

  <target name="dashboardDoc" if="dashboard.present">
    <echo message="Compiling phpdoc" />
    <!-- errors to /dev/null due to Smarty bug: https://bugzilla.redhat.com/show_bug.cgi?id=1352882 -->
    <exec executable="phpdoc"
          failonerror="false"
          failifexecutionfails="false"
          error="/dev/null"
          output="/dev/null"
    >
      <arg line="--ignore phpdoc/,css/,js/,config/,test/,images/,doc/" />
      <arg line="--defaultpackagename dashboard" />
      <arg line="--title /dashboard" />
      <arg line="-t ${htdocsTargetDir}/../dashboard/phpdoc" />
      <arg line="-d ${htdocsTargetDir}/../dashboard" />
      <arg line="-o HTML:Smarty:PHP" />
      <arg value="-q" />
    </exec>
  </target>

</project>
