#!/usr/bin/perl

use strict;

my $baseGus = $ENV{BASE_GUS};
my $projectHome = $ENV{PROJECT_HOME};
my $gusHome = $ENV{GUS_HOME};

my ($projectName, $webapp) = $baseGus =~ /\/(\w+)\/([\w\.-]+)\/?$/;
my $tomcatName = $projectName;

# allow override of the project name (e.g. PlasmoDB, VectorBase, EuPathDB) that is otherwise
# derived from BASE_GUS
$projectName = $ENV{PROJECT_NAME} // $projectName;

unless($baseGus && $projectHome && $gusHome) {
  die "WHOOPS!  Did you forgot to source your setenv file?";
}

my $svnPrefix;
if ($projectName eq "MicrobiomeDB" || $projectName eq "ClinEpiDB") {
  $svnPrefix =$projectName;
  $svnPrefix =~s/DB//  ;
} elsif ($projectName eq "ICEMR" || $projectName eq "Gates" || $projectName eq "AllClinEpiDB") {
  $svnPrefix = "ClinEpi";
} else {
  $svnPrefix = "ApiCommon";
}


my $mode = $ARGV[0];

my @modes;
if ($svnPrefix eq "ApiCommon") {
  @modes = ("full", "model", "graph", "gbrowse", "ontology", "site", "watch-ts", "shiny", "cgi", "jbrowse");
} else {
  @modes = ("full", "model", "site", "watch-ts", "ontology", "graph", "shiny", "cgi");
}

my $isValidMode;
foreach(@modes) {
  $isValidMode++ if($_ eq $mode);
}

unless($isValidMode) {
  die("Whoops... You specified an incorrect command line option: [$mode].  Viable options are " . join(",", @modes));
}


my $cmd;

my $dieOnError = "set -e";

my $injectTemplates = "echo Injecting Templates; presenterInjectTemplates -presentersDir $gusHome/lib/xml/datasetPresenters -templatesDir $gusHome/lib/dst -contactsXmlFile $gusHome/lib/xml/datasetPresenters/contacts/contacts.xml";

my $reloadWebapp = "echo Reloading webapp $webapp; instance_manager manage $tomcatName reload $webapp";

my $stopWebapp = "instance_manager manage $tomcatName stop $webapp";

my $wdkXml = "wdkXml -model $projectName > /dev/null";

my $cleanGbrowseCache = "rm -rf $baseGus/html/gbrowse/tmp/*";

my $stopWebappOnError = 1;

if($mode eq 'full') {
  $cmd = "$dieOnError; bldw $svnPrefix\Presenters $baseGus/etc/webapp.prop; $wdkXml; $reloadWebapp";
}

if($mode eq 'model') {
  $cmd = "$dieOnError; bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; $injectTemplates; $wdkXml; $reloadWebapp";
}

if($mode eq 'cgi') {
  $cmd = "$dieOnError;  bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View";
}

if($mode eq 'graph') {
  if ($svnPrefix eq 'ApiCommon') {
    $cmd = "$dieOnError;  bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View; bld $svnPrefix\Website/Service; $injectTemplates $reloadWebapp";
  } else {
    $cmd = "$dieOnError;  bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View; $injectTemplates $reloadWebapp";
  }
}

if($mode eq 'gbrowse') {
  $cmd = "$dieOnError;  bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; bldw $svnPrefix\Website/Site $baseGus/etc/webapp.prop; $cleanGbrowseCache; $injectTemplates";
}

if($mode eq 'jbrowse') {
  $cmd = "$dieOnError;  jbrowseFromDatasets; bldw $svnPrefix\Website/Site $baseGus/etc/webapp.prop; bld $svnPrefix\Model/Model; $injectTemplates";
}

if($mode eq 'ontology') {
  $cmd = "$dieOnError;  bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; bld $svnPrefix\Presenters/Model; $wdkXml; $reloadWebapp";
}

if($mode eq 'site') {
  $cmd = $projectName eq 'OrthoMCL'
    ? "$dieOnError; bldw EbrcWebsiteCommon/Site $baseGus/etc/webapp.prop; bldw OrthoMCLClient/Site $baseGus/etc/webapp.prop"
    : "$dieOnError; bldw EbrcWebsiteCommon/Site $baseGus/etc/webapp.prop; bldw $svnPrefix\Website/Site $baseGus/etc/webapp.prop";
  $stopWebappOnError = 0;
}

if($mode eq 'watch-ts') {
  $cmd = "$dieOnError; $projectHome/install/node_modules/.bin/tsc --watch --noEmit -p $projectHome/$svnPrefix\Website/Site/tsconfig.json";
  $stopWebappOnError = 0;
}

if($mode eq 'shiny') {
  my @procList = `/usr/sbin/lsof -t -c R -a +D "$gusHome"`;
  if (scalar @procList > 0) {
    $cmd = "bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View; bld $svnPrefix\Model/Model; $injectTemplates; kill \$(/usr/sbin/lsof -t -c R -a +D \"$gusHome\");";
  } else {
    $cmd = "bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View; bld $svnPrefix\Model/Model; $injectTemplates;";
  }
}

print STDERR "Running Command:  $cmd\n";


unless(system($cmd) == 0) {
  if ($stopWebappOnError == 1) {
    print STDERR "stopping webapp...\n";
    system($stopWebapp);
  }
  die "ERROR [$?] running Command: $cmd";;
}

print STDERR "FINISHED Command:  $cmd\n";

1;
